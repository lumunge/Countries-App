{"version":3,"sources":["AppStyles.js","Components/Navbar.jsx","Components/Regions.jsx","Pages/Countries.jsx","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Navigation","styled","nav","SearchContainer","div","Country","CountryCard","FilterBtn","button","Navbar","href","Regions","regions","filterByRegion","className","map","region","index","onClick","SearchPage","useState","countries","setCountries","search","setSearch","filteredCountries","setFilteredCountries","allRegions","Set","country","useEffect","axios","get","then","res","allCountries","data","catch","error","console","log","filter","name","toLowerCase","includes","type","placeholder","onChange","e","target","value","newCountries","src","flag","alt","population","toLocaleString","languages","language","currencies","currency","App","Countries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAGaA,EAAcC,YAAH,mKAaXC,EAAaC,IAAOC,IAAV,udA4BVC,EAAkBF,IAAOG,IAAV,gRAgBfC,EAAUJ,IAAOG,IAAV,2GAMPE,EAAcL,IAAOG,IAAV,6iBAiCXG,EAAYN,IAAOO,OAAV,oT,uCC/FP,SAASC,IACpB,OACI,cAACT,EAAD,UACI,6BACI,6BACI,mBAAGU,KAAK,iCAAR,0BCPpB,IAYeC,EAZC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,eAEvB,OACI,gCACG,sBAAMC,UAAU,UAAhB,wBADH,QAEKF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACT,cAACV,EAAD,CAAuBO,UAAU,aAAaI,QAAS,kBAAML,EAAeG,IAA5E,SAAsFA,GAAkB,WAAxFC,UC4FjBE,EA7FI,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACjBC,EADiB,KACNC,EADM,OAEIF,mBAAS,IAFb,mBAEjBG,EAFiB,KAETC,EAFS,OAG0BJ,mBAAS,IAHnC,mBAGjBK,EAHiB,KAGEC,EAHF,KAMlBC,EAAU,CACf,OADe,mBAEZ,IAAIC,IAAIP,EAAUN,KAAI,SAACc,GAAD,OAAaA,EAAQb,aAI/Cc,qBAAU,WACTC,IACEC,IAAI,wCACJC,MAAK,SAACC,GACN,IAAMC,EAAeD,EAAIE,KACzBd,EAAaa,MAEbE,OAAM,SAACC,GACPC,QAAQC,IAAIF,QAEZ,IAEHR,qBAAU,WACTJ,EACCL,EAAUoB,QAAO,SAACZ,GAAD,OAChBA,EAAQa,KAAKC,cAAcC,SAASrB,EAAOoB,qBAG3C,CAACpB,EAAQF,IAaZ,OACC,gCACC,cAACZ,EAAD,IACA,eAACN,EAAD,WACC,qBAAKW,UAAU,aAAf,SACC,+BACC,uBACC+B,KAAK,OACLC,YAAY,oBACZC,SAAU,SAACC,GAAD,OAAOxB,EAAUwB,EAAEC,OAAOC,cAIvC,qBAAKpC,UAAU,aAAf,SACG,cAAC,EAAD,CACCF,QAASe,EACTd,eA3BgB,SAACG,GACvB,GAAe,QAAXA,EAAJ,CAIA,IAAMmC,EAAe9B,EAAUoB,QAC9B,SAACZ,GAAD,OAAaA,EAAQb,SAAWA,KAEjCU,EAAqByB,QANpBzB,EAAqBL,QA4BpB,cAAChB,EAAD,UACEoB,EAAkBV,KAAI,SAACc,GAAD,OACtB,eAACvB,EAAD,WACC,qBAAKQ,UAAU,OAAf,SACC,qBAAKsC,IAAKvB,EAAQwB,KAAMC,IAAKzB,EAAQa,SAEtC,sBAAK5B,UAAU,cAAf,UACC,mBAAGA,UAAU,eAAb,SAA6Be,EAAQa,OACrC,mBAAG5B,UAAU,QAAb,+BACA,+BAAOe,EAAQ0B,WAAWC,eAAe,WACzC,mBAAG1C,UAAU,QAAb,+BACA,+BACEe,EAAQ4B,UAAU1C,KAAI,SAAC2C,GAAD,OACtB,6BAAKA,EAAShB,YAGhB,mBAAG5B,UAAU,QAAb,0BACA,+BACEe,EAAQ8B,WAAW5C,KAAI,SAAC6C,GAAD,OACvB,6BAAKA,EAASlB,8BC5ETmB,EATH,WACX,OACC,sBAAK/C,UAAU,MAAf,UACC,cAAChB,EAAD,IACA,cAACgE,EAAD,QCHHC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.e83639d8.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport styled from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\t* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n}\n\n.regions{\n\tfont-size: 1.2rem;\n\ttext-transform: capitalize;\n}\n`;\n\nexport const Navigation = styled.nav`\n\theight: 70px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground: #273746;\n\twidth: 100%;\n\tmargin-bottom: 1.2rem;\n\n\tul {\n\t\tdisplay: flex;\n\t}\n\tul li {\n\t\tlist-style: none;\n\t\tpadding: 0 2rem;\n\t}\n\tul li * {\n\t\ttext-decoration: none;\n\t\tcolor: #fff;\n\t\tfont-size: 1.5rem;\n\t}\n\tul li *:hover {\n\t\tcolor: #2ecc71;\n\t\tcursor: pointer;\n\t\ttransition: all 0.4s ease-in-out;\n\t}\n`;\n\nexport const SearchContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\n\t.search-bar form input {\n\t\tcolor: #000;\n\t\tfont-weight: bold;\n\t\tletter-spacing: 1px;\n\t}\n\t.filter-bar {\n\t\tpadding: 1rem 0;\n\t}\n`;\n\nexport const Country = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(4, 1fr);\n\tgrid-gap: 20px;\n`;\n\nexport const CountryCard = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 1rem;\n\twidth: 300px;\n\theight: 200px;\n\n\t.country-name {\n\t\tcolor: #dfff00;\n\t\tfont-weight: bold;\n\t}\n\n\t.flag img {\n\t\tposition: relative;\n\t\twidth: 300px;\n\t\theight: 200px;\n\t}\n\t.description {\n\t\tposition: absolute;\n\t\tbackground: rgba(0, 0, 0, 0.7);\n\t\tcolor: #fff;\n\t\tpadding: 10px;\n\t}\n\t.description .title {\n\t\tfont-weight: bold;\n\t\tcolor: #2ecc71;\n\t}\n\t.description li {\n\t\tlist-style: none;\n\t}\n`;\n\nexport const FilterBtn = styled.button`\n\tmargin: 1rem 1rem;\n\tbackground: transparent;\n\tpadding: 5px 10px;\n\tborder: 2px solid #2ecc71;\n\tfont-size: 1.2rem;\n\ttext-transform: capitalize;\n\n\t&:hover {\n\t\tbackground: #2ecc71;\n\t\ttransition: all 0.4s ease-in-out;\n\t\tcursor: pointer;\n\t\tcolor: #fff;\n\t}\n`;\n","import React from 'react';\n//styles\nimport {Navigation} from '../AppStyles';\n\nexport default function Navbar() {\n    return (\n        <Navigation>\n            <ul>\n                <li>\n                    <a href=\"https://github.com/lumungep12/\">Source</a>\n                </li>\n            </ul>\n        </Navigation>\n    )\n}\n","import {FilterBtn} from '../AppStyles';\n\nconst Regions = ({regions, filterByRegion}) => {\n\n    return(\n        <div>\n           <span className=\"regions\"> Regions: </span> &nbsp;\n            {regions.map((region, index) => (\n                <FilterBtn key={index} className=\"filter-btn\" onClick={() => filterByRegion(region)}>{region ? region : 'Islands'}</FilterBtn>\n            ))}\n        </div>\n    )\n}\n\nexport default Regions;","import { useState, useEffect } from \"react\";\n// styles\nimport { SearchContainer, Country, CountryCard } from \"../AppStyles\";\nimport axios from \"axios\";\nimport Navbar from \"../Components/Navbar\";\nimport Regions from \"../Components/Regions\";\n\nconst SearchPage = () => {\n\tconst [countries, setCountries] = useState([]);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [filteredCountries, setFilteredCountries] = useState([]);\n\n\t// get all regions\n\tconst allRegions = [\n\t\t\"all\",\n\t\t...new Set(countries.map((country) => country.region)),\n\t];\n\n\t// fetch list of countries\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"https://restcountries.eu/rest/v2/all\")\n\t\t\t.then((res) => {\n\t\t\t\tconst allCountries = res.data;\n\t\t\t\tsetCountries(allCountries);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetFilteredCountries(\n\t\t\tcountries.filter((country) =>\n\t\t\t\tcountry.name.toLowerCase().includes(search.toLowerCase())\n\t\t\t)\n\t\t);\n\t}, [search, countries]);\n\n\tconst filterByRegion = (region) => {\n\t\tif (region === \"all\") {\n\t\t\tsetFilteredCountries(countries);\n\t\t\treturn;\n\t\t}\n\t\tconst newCountries = countries.filter(\n\t\t\t(country) => country.region === region\n\t\t);\n\t\tsetFilteredCountries(newCountries);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar />\n\t\t\t<SearchContainer>\n\t\t\t\t<div className=\"search-bar\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search Country...\"\n\t\t\t\t\t\t\tonChange={(e) => setSearch(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"filter-bar\">\n\t\t\t\t\t\t\t<Regions\n\t\t\t\t\t\t\t\tregions={allRegions}\n\t\t\t\t\t\t\t\tfilterByRegion={filterByRegion}\n\t\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Country>\n\t\t\t\t\t{filteredCountries.map((country) => (\n\t\t\t\t\t\t<CountryCard>\n\t\t\t\t\t\t\t<div className=\"flag\">\n\t\t\t\t\t\t\t\t<img src={country.flag} alt={country.name} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"description\">\n\t\t\t\t\t\t\t\t<p className=\"country-name\">{country.name}</p>\n\t\t\t\t\t\t\t\t<p className=\"title\">Total Population:</p>\n\t\t\t\t\t\t\t\t<span>{country.population.toLocaleString(\"en-US\")}</span>\n\t\t\t\t\t\t\t\t<p className=\"title\">Spoken Languages:</p>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{country.languages.map((language) => (\n\t\t\t\t\t\t\t\t\t\t<li>{language.name}</li>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<p className=\"title\">Currencies: </p>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{country.currencies.map((currency) => (\n\t\t\t\t\t\t\t\t\t\t<li>{currency.name}</li>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CountryCard>\n\t\t\t\t\t))}\n\t\t\t\t</Country>\n\t\t\t</SearchContainer>\n\t\t</div>\n\t);\n};\n\nexport default SearchPage;\n","import { GlobalStyle } from \"./AppStyles\";\nimport Countries from \"./Pages/Countries\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<GlobalStyle />\n\t\t\t<Countries />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}