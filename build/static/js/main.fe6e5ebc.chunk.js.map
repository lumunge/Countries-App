{"version":3,"sources":["Components/Countries/styles.js","Components/Regions/styles.js","Components/Regions/Regions.jsx","Components/Countries/Countries.jsx","App.js","index.js"],"names":["makeStyles","mainContainer","display","flexDirection","alignItems","searchBar","margin","image","height","span","fontSize","color","appBar","marginBottom","textAlign","filterBtn","padding","textTransform","backgroundColor","regions","Regions","filterByRegion","classes","useStyles","AppBar","position","className","map","region","index","Button","variant","onClick","Countries","useState","countries","setCountries","search","setSearch","filteredCountries","setFilteredCountries","loading","setLoading","allRegions","Set","country","useEffect","axios","get","then","res","allCountries","data","catch","error","console","log","filter","name","toLowerCase","includes","Container","TextField","label","onChange","e","target","value","newCountries","Grid","container","spacing","item","xs","sm","Card","CardMedia","flag","title","CardContent","Typography","population","toLocaleString","languages","language","currencies","currency","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe6e5ebc.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n\tmainContainer: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\tsearchBar: {\n\t\tmargin: \"1rem 0\",\n\t},\n\timage: {\n\t\theight: 140,\n\t},\n\tspan: {\n\t\tfontSize: \"1rem\",\n\t\tcolor: \"#000\",\n\t},\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n\tappBar: {\n\t\tmarginBottom: \"1.5rem\",\n\t\ttextAlign: \"center\",\n\t},\n\tfilterBtn: {\n\t\tmargin: \"10px 10px\",\n\t\tpadding: \"5px 10px\",\n\t\tfontSize: \"1rem\",\n\t\ttextTransform: \"capitalize\",\n\t\tbackgroundColor: \"#fa709a\",\n\t},\n\tregions: {\n\t\tfontSize: \"1.2rem\",\n\t\ttextTransform: \"capitalize\",\n\t},\n}));\n","import {AppBar, Button} from \"@material-ui/core\";\nimport useStyles from './styles';\n\nconst Regions = ({regions, filterByRegion}) => {\n\n    const classes = useStyles();\n\n    return(\n        <AppBar color=\"transparent\" position=\"static\" className={classes.appBar}>\n            <div>\n            {regions.map((region, index) => (\n                <Button className={classes.filterBtn} variant=\"contained\" key={index} onClick={() => filterByRegion(region)}>{region ? region : 'Islands'}</Button>\n            ))}\n            </div>\n        </AppBar>\n    )\n}\n\nexport default Regions;","import { useState, useEffect } from \"react\";\n// material ui components\nimport {\n\tGrid,\n\tCard,\n\tCardContent,\n\tTypography,\n\tCardMedia,\n\tTextField,\n\tContainer\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n// styles\nimport useStyles from \"./styles\";\nimport Regions from \"../Regions/Regions\";\n\nconst Countries = () => {\n\tconst [countries, setCountries] = useState([]);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [filteredCountries, setFilteredCountries] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\n\t// style classes\n\tconst classes = useStyles();\n\n\t// get all regions\n\tconst allRegions = [\n\t\t\"all\",\n\t\t...new Set(countries.map((country) => country.region)),\n\t];\n\n\t// fetch list of countries\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"https://restcountries.eu/rest/v2/all\")\n\t\t\t.then((res) => {\n\t\t\t\tconst allCountries = res.data;\n\t\t\t\tsetCountries(allCountries);\n\t\t\t\tsetLoading(!loading);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t}, []);\n\n\t// fetch filtered countries by search parameter\n\tuseEffect(() => {\n\t\tsetFilteredCountries(\n\t\t\tcountries.filter((country) =>\n\t\t\t\tcountry.name.toLowerCase().includes(search.toLowerCase())\n\t\t\t)\n\t\t);\n\t}, [search, countries]);\n\n\t// filtering by region\n\tconst filterByRegion = (region) => {\n\t\tif (region === \"all\") {\n\t\t\tsetFilteredCountries(countries);\n\t\t\treturn;\n\t\t}\n\t\tconst newCountries = countries.filter(\n\t\t\t(country) => country.region === region\n\t\t);\n\t\tsetFilteredCountries(newCountries);\n\t};\n\n\treturn (\n\t\t<Container className={classes.mainContainer}>\n\t\t\t<TextField\n\t\t\t\tlabel=\"Search Country...\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tonChange={(e) => setSearch(e.target.value)}\n\t\t\t\tclassName={classes.searchBar}\n\t\t\t/>\n\t\t\t<Regions regions={allRegions} filterByRegion={filterByRegion} />\n\t\t\t{loading ? (\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t{filteredCountries.map((country) => (\n\t\t\t\t\t<Grid item xs={12} sm={4}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\tclassName={classes.image}\n\t\t\t\t\t\t\t\timage={country.flag}\n\t\t\t\t\t\t\t\ttitle={country.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\t\t{country.name}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" color=\"secondary\">\n\t\t\t\t\t\t\t\t\tTotal Population:{\" \"}\n\t\t\t\t\t\t\t\t\t<span className={classes.span}>\n\t\t\t\t\t\t\t\t\t\t{country.population.toLocaleString(\n\t\t\t\t\t\t\t\t\t\t\t\"en-US\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" color=\"secondary\">\n\t\t\t\t\t\t\t\t\tSpoken Languages:{\" \"}\n\t\t\t\t\t\t\t\t\t<span className={classes.span}>\n\t\t\t\t\t\t\t\t\t\t{country.languages.map((language) => (\n\t\t\t\t\t\t\t\t\t\t\t<>{`${language.name}, `}</>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\" color=\"secondary\">\n\t\t\t\t\t\t\t\t\tCurrencies:{\" \"}\n\t\t\t\t\t\t\t\t\t<span className={classes.span}>\n\t\t\t\t\t\t\t\t\t\t{country.currencies.map((currency) => (\n\t\t\t\t\t\t\t\t\t\t\t<>{currency.name}</>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"h6\">Patience Friend...</Typography>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default Countries;\n","import Countries from \"./Components/Countries/Countries\";\nimport \"./App.css\";\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Countries />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}